# if nvim is present, use it!
if [ -x "$(command -v nvim)" ]; then
  export EDITOR="/usr/bin/nvim"
else
  export EDITOR="/usr/bin/vim"
fi

# set the TMUX_BIN, prefer the user-compiled one
[ -f /usr/local/bin/tmux ] && export TMUX_BIN=/usr/local/bin/tmux
[ ! -f /usr/local/bin/tmux ] && export TMUX_BIN=/usr/bin/tmux

# is the shell running interactively
case "$-" in
  *i*) INTERACTIVE_SHELL=1
esac

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"
ZSH_THEME="murilasso"
plugins=(git)
source $ZSH/oh-my-zsh.sh

# Source general scripts
export GIT_PATH=$HOME
source $GIT_PATH/linux_dotfiles/zsh/general.sh

# create alisases
alias sb="source ~/.zshrc"
alias vim=runVim
alias vimdiff="vim -d"
alias cbt="catkin build --this"
alias catkin_src="roscd && cd ../src"

# Vi mode in ZSH
bindkey -v

# use the vi navigation keys in menu completion
bindkey -M menuselect 'h' vi-backward-char
bindkey -M menuselect 'k' vi-up-line-or-history
bindkey -M menuselect 'l' vi-forward-char
bindkey -M menuselect 'j' vi-down-line-or-history

# alias the "bash's" command history to "zshell's" command read
# handy for common tmuxinator scripts
historyRead() {
  eval 'print $@'
}
alias history='historyRead'

# load tmux automatically
export RUN_TMUX="true"
if [ ! -z "$INTERACTIVE_SHELL" ]; then # when loaded interactively, run tmux
  if [ "$RUN_TMUX" = "true" ]; then
    if command -v $TMUX_BIN>/dev/null; then
        [[ ! $TERM =~ screen ]] && [ -z $TMUX ] && runTmux
    fi
  fi
fi

true # so that this script returns 0
